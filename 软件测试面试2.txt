问：你在测试中发现了一个  bug ，但是开发经理认为这不是一个  bug ，你应该怎样解决。

1、将问题提交到缺陷管理库里面进行备案。
2、要获取判断的依据和标准：
根据需求说明书、产品说明、设计文档等，确认实际结果是否与计划有不一致的地方，提供缺陷是否确认的直接依据；
如果没有文档依据，可以根据类似软件的一般特性来说明是否存在不一致的地方，来确认是否是缺陷；
根据用户的一般使用习惯，来确认是否是缺陷；
3、与设计人员、开发人员和客户代表等相关人员探讨，确认是否是缺陷；
4、合理的论述，向测试经理说明自己的判断的理由，注意客观、严谨，不参杂个人情绪。
等待测试经理做出最终决定，如果仍然存在争议，可以通过公司政策所提供的渠道，向上级反映，并有上级做出决定。

 

问：给你一个网站，你如何测试？
1、查找需求说明、网站设计 m 等相关文档，分析测试需求。
2、制定测试计划，确定测试范围和测试策略，一般包括以下几个部分：
     功能性测试；界面测试；性能测试；数据库测试；安全性测试；兼容性测试
3、设计测试用例：
     功能性测试可以包括，但不限于以下几个方面：
     链接测试。链接是否正确跳转，是否存在空页面和无效页面，是否有不正确的出错信息返回等。提交功能的测试。
     多媒体元素是否可以正确加载和显示。多语言支持是否能够正确显示选择的语言等。
     界面测试可以包括但不限于一下几个方面：

页面是否风格统一，美观
页面布局是否合理，重点内容和热点内容是否突出                                                               
控件是否正常使用
对于必须但为安装的空间，是否提供自动下载并安装的功能
文字检查
性能测试一般从以下三个方面考虑：
                        压力测试；负载测试；强度测试
数据库测试要具体决定是否需要开展。数据库一般需要考虑连结性，对数据的存取操作，数
据内容的验证等方面。
安全性测试：

基本的登录功能的检查
是否存在溢出错误，导致系统崩溃或者权限泄露
关开发语言的常见安全性问题检查，例如 SQL 注入等。
如果需要高级的安全性测试，确定获得专业安全公司的帮助，外包测试，或者获取支持兼容性测试，根据需求说明的内容，确定支持的平台组合：
兼容性包括：浏览器的兼容性；操作系统的兼容性；软件平台的兼容性；数据库的兼容性

4、开展测试，并记录缺陷。合理的安排调整测试进度，提前获取测试所需的资源，建立管理体系（例如，需求变更、风险、配置、测试文档、缺陷报告、人力资源等内容）。定期评审，对测试进行评估和总结，调整测试的内容。

在搜索引擎中输入汉字就可以解析 到对应的域名，请问如何用 r LoadRunner  进行测试。
建立测试计划，确定测试标准和测试范围

设计典型场景的测试用例，覆盖常用业务流程和不常用的业务流程等

根据测试用例，开发自动测试脚本和场景：

录制测试脚本
新建一个脚本（Web/HTML 协议）
点击录制按钮，在弹出的对话框的 URL 中输入”about:blank”。
在打开的浏览器中进行正常操作流程后，结束录制。
调试脚本并保存。可能要注意到字符集的关联。
设置测试场景
针对性能设置测试场景，主要判断在正常情况下，系统的平均事务响应时间是否达标
针对压力负载设置测试场景，主要判断在长时间处于满负荷或者超出系统承载能力的条件
下，系统是否会崩溃。

执行测试，获取测试结果，分析测试结果

问：一台客户端有三百个客户与三百个客户端有三百个客户对服务器施压，有什么区别? ?
300 个用户在一个客户端上，会占用客户机更多的资源，而影响测试的结果。
线程之间可能发生干扰，而产生一些异常。
300 个用户在一个客户端上，需要更大的带宽。
IP 地址的问题，可能需要使用 IP Spoof 来绕过服务器对于单一 IP 地址最大连接数的限制。
所有用户在一个客户端上，不必考虑分布式管理的问题；而用户分布在不同的客户端上，需要考虑使用控制器来整体调配不同客户机上的用户。同时，还需要给予相应的权限配置和防火墙设置。

问：试述软件的概念和特点？软件复用的含义？构件包括哪些？

软件是计算机系统中与硬件相互依存的另一部分，它是包括程序、文档的完整集合。
软件复用(Software Reuse)是将已有软件的各种有关知识用于建立新的软件,以缩减软件开发和维护的花费。软件复用是提高软件生产力和质量的一种重要技术。早期的软件复用主要是代码级复用，被复用的知识专指程序，后来扩大到包括领域知识、开发经验、设计决定、体系结构、需求、设计、代码和文档等一切有关方面。

可以被复用的软件成分一般称作可复用构件

问：软件生存周期及其模型是什么？
软件生存周期是软件开发全部过程、活动和任务的结构框架，是从可行性研究到需求分析、
软件设计、编码、测试、软件发布维护的过程。
在经历需求、分析、设计、实现、部署后，软件将被使用并进入维护阶段，直到最后由于缺
少维护费用而逐渐消亡。这样的一个过程，称为"生命周期模型"（Life Cycle Model）。
什么是软件测试？软件测试的目的与原则
使用人工或自动手段，来运行或测试某个系统的过程。其目的在于检验它是否满足规定的需
求或弄清预期结果与实际结果之间的差别。
软件测试的目的：
测试是程序的执行过程，目的在于发现错误
一个成功的测试用例在于发现至今未发现的错误
一个成功的测试是发现了至今未发现的错误的测试
确保产品完成了它所承诺或公布的功能，并且用户可以访问到的功能都有明确的书面说明。
确保产品满足性能和效率的要求
确保产品是健壮的和适应用户环境的
软件测试的原则：
教材的说法：
软件测试应尽早执行，并贯穿于整个软件生命周期
软件测试应追溯需求
测试应由第三方来构造
穷举测试是不可能的,要遵循 Good-enough 原则
必须确定预期输出（或结果）
必须彻底检查每个测试结果
充分注意测试中的群集现象
缺陷的二八定理
严格执行测试计划，排除测试的随意性
注意合法合理的输入，也要注意非法的非预期的输入
检查程序是否做了不该做的
测试应从“小规模”开始，逐步转向“大规模”
反复使用同样的测试会使软件具有抵抗力
关注缺陷的修复
软件配置管理的作用？软件配置包括什么？
软件配置管理作为软件开发过程的必要环节和软件开发管理的基础，贯穿整个软件生命周期，同时对软件开发过程的宏观管理即项目管理也有重要的支持作用。一个软件开发组织真正有效的实施软件配置管理，将会使软件开发过程有更好的可预测性，使系统具有可重复性，大大提高软件组织的竞争力。
软件配置包括如下内容：
配置项识别
工作空间管理
版本控制
变更控制
状态报告
配置审计
什么是软件质量？

 

软件质量：软件产品的特性可以满足用户的功能、性能需求的能力。

 

 

目前主要的测试用例设计方法是什么？

白盒测试：
逻辑覆盖
循环覆盖
基本路径覆盖
黑盒测试：
边界值分析法
等价类划分
错误猜测法
因果图法
状态图法
测试大纲法
随机测试

 

场景法

 

 

软件的安全性应从哪几个方面 去测试？
软件安全性测试包括程序、数据库安全性测试。根据系统安全指标不同测试策略也不同。
用户认证安全的测试要考虑问题：
明确区分系统中不同用户权限
系统中会不会出现用户冲突
系统会不会因用户的权限的改变造成混乱
用户登陆密码是否是可见、可复制
是否可以通过绝对途径登陆系统（拷贝用户登陆后的链接直接进入系统）
用户退出系统后是否删除了所有鉴权标记，是否可以使用后退键而不通过输入口令进入系统
系统网络安全的测试要考虑问题
测试采取的防护措施是否正确装配好，有关系统的补丁是否打上
模拟非授权攻击，看防护系统是否坚固
采用成熟的网络漏洞检查工具检查系统相关漏洞（即用最专业的黑客攻击工具攻击试一下，
现在最常用的是 NBSI 系列和 IPhacker IP ）
采用各种木马检查工具检查系统木马情况
采用各种防外挂工具检查系统各组程序的外挂漏洞
数据库安全考虑问题：

 

系统数据是否机密（比如对银行系统，这一点就特别重要，一般的网站就没有太高要求）

 

系统数据的完整性（我刚刚结束的企业实名核查服务系统中就曾存在数据的不完整，对于这
个系统的功能实现有了障碍）
系统数据可管理性
系统数据的独立性

系统数据可备份和恢复能力（数据备份是否完整，可否恢复，恢复是否可以完整）


什么是测试用例 什么是测试脚本 两者的关系是什么？
为实施测试而向被测试系统提供的输入数据、操作或各种环境设置以及期望结果的一个特定的集合。
测试脚本是为了进行自动化测试而编写的脚本。
测试脚本的编写必须对应相应的测试用例，
简述什么是静态测试、动态测试、黑盒测试、白盒测试、α测试 β测试
静态测试是不运行程序本身而寻找程序代码中可能存在的错误或评估程序代码的过程。
动态测试是实际运行被测程序，输入相应的测试实例，检查运行结果与预期结果的差异，判
定执行结果是否符合要求，从而检验程序的正确性、可靠性和有效性，并分析系统运行效率
和健壮性等性能。
黑盒测试一般用来确认软件功能的正确性和可操作性,目的是检测软件的各个功能是否能得
以实现,把被测试的程序当作一个黑盒,不考虑其内部结构,在知道该程序的输入和输出之间
的关系或程序功能的情况下,依靠软件规格说明书来确定测试用例和推断测试结果的正确
性。
白盒测试根据软件内部的逻辑结构分析来进行测试,是基于代码的测试，测试人员通过阅读
程序代码或者通过使用开发工具中的单步调试来判断软件的质量，一般黑盒测试由项目经理
在程序员开发中来实现。
α测试是由一个用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环
境下进行的受控测试，Alpha 测试不能由程序员或测试员完成。
β测试是软件的多个用户在一个或多个用户的实际使用环境下进行的测试。开发者通常不在
测试现场，Beta 测试不能由程序员或测试员完成。
软件质量保证体系是什么 国家标准中与质量保证管理相关的几个标准是什么? ? 他们的编号
和全称是什么? ?
SQA 由一套软件工程过程和方法组成，以保证（软件的）质量。SQA 贯穿整个软件开发过程，
(它)应包括需求文档评审、代码控制、代码评审、变更管理、配置管理、版本管理和软件测
试。


软件产品质量特性是什么? ?
功能性：适应性、准确性、互操作性、依从性、安全性。

可靠性：成熟性、容错性、以恢复性。
可使用性：易理解性、易学习性、易操作性。
效率：时间特性、资源特性。
可维护性：易分析性、易变更性、稳定性、易测试性。
可移植性： 适应性、易安装性、遵循性、易替换性。


软件测试的策略是什么? ?
软件测试策略：在一定的软件测试标准、测试规范的指导下，依据测试项目的特定环境约束
而规定的软件测试的原则、方式、方法的集合。


软件测试分为几个 阶段 各阶段的测试策略和要求是什么? ?
软件测试按阶段划分可以分为单元测试、集成测试、系统测试和<验收测试>（不一定有）几
个阶段
单元测试测试策略：
自顶向下的单元测试策略
总结：比孤立单元测试的成本高很多，不是单元测试的一个好的选择。
自底向上的单元测试策略
总结：比较合理的单元测试策略，但测试周期较长。
孤立单元测试策略
总结：最好的单元测试策略。
集成测试的测试策略：
大爆炸集成
适应于一个维护型项目或被测试系统较小
自顶向下集成
适应于产品控制结构比较清晰和稳定；高层接口变化较小；底层接口未定义或经常可能被修
改；产口控制组件具有较大的技术风险，需要尽早被验证；希望尽早能看到产品的系统功能
行为。
自底向上集成
适应于底层接口比较稳定；高层接口变化比较频繁；底层组件较早被完成。
基于进度的集成
优点：具有较高的并行度；能够有效缩短项目的开发进度。
缺点：桩和驱动工作量较大；有些接口测试不充分；有些测试重复和浪费。
系统测试的测试策略

数据和数据库完整性测试；功能测试；用户界面测试；性能评测；负载测试；强度测试；容
量测试；安全性和访问控制测试；故障转移和恢复测试；配置测试；安装测试；加密测试；
可用性测试；版本验证测试；文档测试
在软件测试各个阶段通常完成什么工作？各个阶段的结果文件是什么？包括什么内容？
单元测试阶段。各独立单元模块在与系统地其他部分相隔离的情况下进行测试，单元测试针
对每一个程序模块进行正确性校验，检查各个程序模块是否正确地实现了规定的功能。生成
单元测试报告，提交缺陷报告。
集成测试阶段。集成测试是在单元测试的基础上，测试在将所有的软件单元按照概要设计规
格说明的要求组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标
及要求的活动。该阶段生成集成测试报告，提交缺陷报告。
系统测试阶段。将通过确认测试的软件，作为整个给予计算机系统的一个元素，与计算机硬
件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行环境下，对
计算机系统进行全面的功能覆盖。该阶段需要提交测试总结和缺陷报告。


测试人员在软件开发过程中的任务是什么？
1、寻找 Bug；
2、避免软件开发过程中的缺陷；
3、衡量软件的品质；
4、关注用户的需求。
总的目标是：确保软件的质量。
在您以往的工作中，一条软件缺陷（或者叫 Bug）记录都包含了哪些内容？如何提交高质量的软件缺陷（Bug）记录？

一条 Bug 记录最基本应包含：编号、Bug 所属模块、Bug 描述、Bug 级别、发现日期、发现人、修改日期、修改人、修改方法、回归结果等等；

要有效的发现 Bug 需参考需求以及详细设计等前期文档设计出高效的测试用例，然后严格执行测试用例，对发现的问题要充分确认

肯定，然后再向外发布如此才能提高提交 Bug 的质量。
黑盒测试和白盒测试是软件测试的两种基本方法，请分别说明各自的优点和缺点！
黑盒测试的优点有：
比较简单，不需要了解程序内部的代码及实现；
与软件的内部实现无关；
从用户角度出发，能很容易的知道用户会用到哪些功能，会遇到哪些问题；
基于软件开发文档，所以也能知道软件实现了文档中的哪些功能；
在做软件自动化测试时较为方便。
黑盒测试的缺点有：
不可能覆盖所有的代码，覆盖率较低，大概只能达到总代码量的 30%；
自动化测试的复用性较低。

白盒测试的优点有：
帮助软件测试人员增大代码的覆盖率，提高代码的质量，发现代码中隐藏的问题。
白盒测试的缺点有：
程序运行会有很多不同的路径，不可能测试所有的运行路径；
测试基于代码，只能测试开发人员做的对不对，而不能知道设计的正确与否，可能会漏掉一
些功能需求；
系统庞大时，测试开销会非常大。

 

如何测试一个 纸杯？

功能度：用水杯装水看漏不漏；水能不能被喝到
安全性：杯子有没有毒或细菌
可靠性：杯子从不同高度落下的损坏程度
可移植性：杯子在不同的地方、温度等环境下是否都可以正常使用
兼容性：杯子是否能够容纳果汁、白水、酒精、汽油等
易用性：杯子是否烫手、是否有防滑措施、是否方便饮用
用户文档：使用手册是否对杯子的用法、限制、使用条件等有详细描述
疲劳测试：将杯子盛上水（案例一）放 24 小时检查泄漏时间和情况；盛上汽油（案例二）
放 24 小时检查泄漏时间和情况等
压力测试：用根针并在针上面不断加重量，看压强多大时会穿透


测试计划工作的目的是什么？测试计划文档的内容应该包括什么？其中哪些是最重要的？
答案：软件测试计划是指导测试过程的纲领性文件。
包含了产品概述、测试策略、测试方法、测试区域、测试配置、测试周期、测试资源、测试
交流、风险分析等内容。借助软件测试计划，参与测试的项目成员，尤其是测试管理人员，
可以明确测试任务和测试方法，保持测试实施过程的顺畅沟通，跟踪和控制测试进度，应对
测试过程中的各种变更。
测试计划和测试详细规格、测试用例之间是战略和战术的关系，测试计划主要从宏观上规划
测试活动的范围、方法和资源配置，而测试详细规格、测试用例是完成测试任务的具体战术。
所以其中最重要的是测试测试策略和测试方法（最好是能先评审）。


黑盒测试的测试用例常见设计方法都有哪些？请分别以具体的例子来说明这些方法在测试用例设计工作中的应用。
等价类划分
划分等价类: 等价类是指某个输入域的子集合.在该子集合中,各个输入数据对于揭露程序
中的错误都是等效的.并合理地假定:测试某等价类的代表值就等于对这一类其它值的测试.

因此,可以把全部输入数据合理划分为若干等价类,在每一个等价类中取一个数据作为测试
的输入条件,就可以用少量代表性的测试数据.取得较好的测试结果.等价类划分可有两种不
同的情况:有效等价类和无效等价类.
2）边界值分析法
边界值分析方法是对等价类划分方法的补充。测试工作经验告诉我,大量的错误是发生在输
入或输出范围的边界上,而不是发生在输入输出范围的内部.因此针对各种边界情况设计测
试用例,可以查出更多的错误.
使用边界值分析方法设计测试用例,首先应确定边界情况.通常输入和输出等价类的边界,就
是应着重测试的边界情况.应当选取正好等于,刚刚大于或刚刚小于边界的值作为测试数据,
而不是选取等价类中的典型值或任意值作为测试数据.
3）错误猜测法
基于经验和直觉推测程序中所有可能存在的各种错误, 从而有针对性的设计测试用例的方
法.
错误推测方法的基本思想: 列举出程序中所有可能有的错误和容易发生错误的特殊情况,根
据他们选择测试用例. 例如, 在单元测试时曾列出的许多在模块中常见的错误. 以前产品
测试中曾经发现的错误等, 这些就是经验的总结. 还有, 输入数据和输出数据为 0 的情况.
输入表格为空格或输入表格只有一行. 这些都是容易发生错误的情况. 可选择这些情况下
的例子作为测试用例.

4）因果图方法
前面介绍的等价类划分方法和边界值分析方法,都是着重考虑输入条件,但未考虑输入条件
之间的联系, 相互组合等. 考虑输入条件之间的相互组合,可能会产生一些新的情况. 但要
检查输入条件的组合不是一件容易的事情, 即使把所有输入条件划分成等价类,他们之间的
组合情况也相当多. 因此必须考虑采用一种适合于描述对于多种条件的组合,相应产生多个
动作的形式来考虑设计测试用例. 这就需要利用因果图（逻辑模型）. 因果图方法最终生成
的就是判定表. 它适合于检查程序输入条件的各种组合情况.
5）正交表分析法
有时候，可能因为大量的参数的组合而引起测试用例数量上的激增，同时，这些测试用例并
没有明显的优先级上的差距，而测试人员又无法完成这么多数量的测试，就可以通过正交表
来进行缩减一些用例，从而达到尽量少的用例覆盖尽量大的范围的可能性。
6）场景分析方法
指根据用户场景来模拟用户的操作步骤，这个比较类似因果图，但是可能执行的深度和可行
性更好。
7）状态图法
通过输入条件和系统需求说明得到被测系统的所有状态，通过输入条件和状态得出输出条
件；通过输入条件、输出条件和状态得出被测系统的测试用例。
8）大纲法
大纲法是一种着眼于需求的方法，为了列出各种测试条件，就将需求转换为大纲的形式。大
纲表示为树状结构，在根和每个叶子结点之间存在唯一的路径。大纲中的每条路径定义了一
个特定的输入条件集合，用于定义测试用例。树中叶子的数目或大纲中的路径给出了测试所
有功能所需测试用例的大致数量。

 

 详细的描述一个测试活动完整的过程。

答案：（供参考，本答案主要是瀑布模型的做法）
项目经理通过和客户的交流，完成需求文档，由开发人员和测试人员共同完成需求文档的评
审，评审的内容包括：需求描述不清楚的地方和可能有明显冲突或者无法实现的功能的地方。
项目经理通过综合开发人员，测试人员以及客户的意见，完成项目计划。然后 SQA 进入项目，
开始进行统计和跟踪
开发人员根据需求文档完成需求分析文档，测试人员进行评审，评审的主要内容包括是否有
遗漏或者双方理解不同的地方。测试人员完成测试计划文档，测试计划包括的内容上面有描
述。
测试人员根据修改好的需求分析文档开始写测试用例，同时开发人员完成概要设计文档，详
细设计文档。此两份文档成为测试人员撰写测试用例的补充材料。
测试用例完成后，测试和开发需要进行评审。
测试人员搭建环境
开发人员提交第一个版本，可能存在未完成功能，需要说明。测试人员进行测试，发现 BUG
后提交给 BugZilla。
开发提交第二个版本，包括 Bug Fix 以及增加了部分功能，测试人员进行测试。
重复上面的工作，一般是 3-4 个版本后 BUG 数量减少，达到出货的要求。
如果有客户反馈的问题，需要测试人员协助重现并重新测试。

 

在您以往的工作中，一条软件缺陷（或者叫  Bug ）记录都包含了哪些内容？如何提交高质量的软件缺陷（ Bug ）记录？

在传统的 BugZilla 中，BUG 描述应该包括以下的信息
和 BUG 产生对应的软件版本和模块
开发的接口人员
BUG 的优先级
BUG 的严重程度
BUG 可能属于的模块，如果不能确认，可以用开发人员来判断
BUG 标题，需要清晰的描述现象
BUG 描述，需要尽量给出重新 Bug 的步骤
BUG 附件中能给出相关的日志和截图。
高质量的 BUG 记录就是指很容易理解的 BUG 记录，所以，对于描述的要求高，能提供的信息
多且准确，很好的帮助开发人员定位，因此提交高质量的软件缺陷记录需要注意对 BUG 记录
的描述质量多且准确。

G BUG  管理工具的跟踪过程
用 BugZilla 为例子
测试人员发现了 BUG，提交到 Bugzilla 中，状态为 new，BUG 的接受者为开发接口人员
开发接口将 BUG 分配给相关的模块的开发人员，状态修改为已分配，开发人员和测试确认
BUG，如果是本人的 BUG，则设置为接收；如果是别的开发人员的问题，则转发出去，由下
一个开发人员来进行此行为；如果认为不是问题，则需要大家讨论并确认后，拒绝这个 BUG，
然后测试人员关闭此问题。
如果开发人员接受了 BUG，并修改好以后，将 BUG 状态修改为已修复，并告知测试在哪个版
本中可以测试。
测试人员在新版本中测试，如果发现问题依然存在，则拒绝验证；如果已经修复，则关闭
BUG。

答:1) 测试人员或开发人员发现bug后，判断属于哪个模块的问题，填写bug报告后，系统会自动通过Email通知项目组长或直接通知开发者。
2) 经验证无误后，修改状态为VERIFIED.待整个产品发布后，修改为CLOSED.
3) 还有问题，REOPENED，状态重新变为“New"，并发邮件通知。
4) 项目组长根据具体情况，重新reassigned分配给bug所属的开发者。
5) 若是，进行处理，resolved并给出解决方法。(可创建补丁附件及补充说明)
6) 开发者收到Email信息后，判断是否为自己的修改范围。
7) 若不是，重新reassigned分配给项目组长或应该分配的开发者。
8) 测试人员查询开发者已修改的bug，进行重新测试。

您认为在测试人员同开发人员的沟通过程中，如何提高沟通的效率和改善沟通的效果？

维持测试人员同开发团队中其他成员 良好的人际关系的关键是什么？
尽量面对面的沟通，其次是能直接通过电话沟通，如果只能通过 Email 等非及时沟通工具的
话，强调必须对特性的理解深刻以及能表达清楚。
运用一些测试管理工具如 TestDirector 进行管理也是较有效的方法，同时要注意在
TestDirector 中对 BUG 有准确的描述。


在团队中建立测试人员与开发人员良好沟通中注意以下几点：
一真诚
二是团队精神
三是在专业上有共同语言
四是要对事不对人，工作至上
当然也可以通过直接指出一些小问题，而不是进入 BUG Tracking System 来增加对方的好感。

 

你对测试最大的兴趣在哪里？为什么？

回答这个面试题，没有固定统一的答案，但可能是许多企业都会问到的。提供以下答案供考：
最大的兴趣，感觉这是一个有挑战性的工作；
测试是一个经验行业，工作越久越能感觉到做好测试的难度和乐趣
通过自己的工作，能使软件产品越来越完善，从中体会到乐趣
回答此类问题注意以下几个方面：
尽可能的切合招聘企业的技术路线来表达你的兴趣，例如该企业是数据库应用的企业，那么
表示你的兴趣在数据库的测试，并且希望通过测试提升自己的数据库掌握能力。
表明你做测试的目的是为了提升能力，也是为了更好的做好测试；提升能力不是为了以后转
开发或其他的，除非用人企业有这样的安排。
不要过多的表达你的兴趣在招聘企业的范畴这外。比如招聘企业是做财务软件的，可是你表
现出来的是对游戏软件的兴趣；或招聘是做 JAVA 开发的，而你的兴趣是在 C 类语言程序的
开发。


你自认为测试的优势在哪里？
该面试也没有固定不变的答案，但可参考以下几点，并结合自身特点：
有韧性
有耐心
做事有条理性
喜欢面对挑战
有信心做好每一件事情
较强的沟通能力

从以前的经理处都得到了很好的评价表明我做的很好

集成测试通常都有那些策 略？

1、大爆炸集成
2、自顶向下集成
3、自底向上集成
4、三明治集成适应于大部分软件开发项目
5、基干集成
6、分层集成
7、基于功能的集成
8、基于消息的集成
9、基于风险的集成
10、基于进度的集成

 

常用 X UNIX  命令x (Linux  的常用命令) ) （至少 0 10  个）； (Unix)
答：ls pwd mkdir rmdir rm cp mv cd ps ping tail more echo adduser passwd logout exit，
参见 Linux 的教材。
简述你在以前的工作中做过哪些事情，比较熟悉什么。
此问题每个人都不一样。参考答案如下。
我过去的主要工作是系统测试和自动化测试。在系统测试中，主要是对 BOSS 系统的业务逻
辑功能，以及软交换系统的 Class 5 特性进行测试。性能测试中，主要是进行的压力测试，
在各个不同数量请求的情况下，获取系统响应时间以及系统资源消耗情况。自动化测试主要
是通过自己写脚本以及一些第三方工具的结合来测试软交换的特性测试。
在测试中，我感觉对用户需求的完全准确的理解非常重要。另外，就是对 BUG 的管理，要以
需求为依据，并不是所有 BUG 均需要修改。
测试工作需要耐心和细致，因为在新版本中，虽然多数原来发现的 BUG 得到了修复，但原来

正确的功能也可能变得不正确。因此要注重迭代测试和回归测试。

 

在  C/C++中 中 c static  有什么用途？（请至少说明两种）
1)在函数体，一个被声明为静态的变量在这一函数被调用过程中维持其值不变。
2) 在模块内（但在函数体外），一个被声明为静态的变量可以被模块内所用函数访问，但
不能被模块外其它函数访问。它是一个本地的全局变量。
3) 在模块内，一个被声明为静态的函数只可被这一模块内的其它函数调用。那就是，这个
函数被限制在声明它的模块的本地范围内使用

 

 

 

引用与指针有什么区别？

1) 引用必须被初始化，指针不必。
2) 引用初始化以后不能被改变，指针可以改变所指的对象。
3) 不存在指向空值的引用，但是存在指向空值的指针。
t Internet  采用哪种网络协议？该协议的主要层次结构？t Internet  物理地址和 P IP  地址转换
采用什么协议？

 

TCP/IP 协议

主要层次结构为： 应用层/传输层/网络层/数链路层。
ARP (Address Resolution Protocol)（地据址解析协议）

 

说说你对集成测试中自顶向下集成和自底向上集成两个策略的理解，要谈出它们各自的优

缺点和主要适应于哪种类型测试；
自顶向下集成
优点：较早地验证了主要控制和判断点；按深度优先可以首先实现和验证一个完整的软件功
能；功能较早证实，带来信心；只需一个驱动，减少驱动器开发的费用；支持故障隔离。
缺点：柱的开发量大；底层验证被推迟；底层组件测试不充分。

 

适应于产品控制结构比较清晰和稳定；高层接口变化较小；底层接口未定义或经常可能被修
改；产口控制组件具有较大的技术风险，需要尽早被验证；希望尽早能看到产品的系统功能
行为。
2、自底向上集成
优点：对底层组件行为较早验证；工作最初可以并行集成，比自顶向下效率高；减少了桩的
工作量；支持故障隔离。
缺点：驱动的开发工作量大；对高层的验证被推迟，设计上的错误不能被及时发现。
适应于底层接口比较稳定；高层接口变化比较频繁；底层组件较早被完成。
软件验收测试包括 ___ 、 ___ 、 ____ 三种类型。
软件验收测试包括正式验收测试、alpha 测试、beta 测试三种测试。
2 2 ．系统测试的策略有 ____________________________等 等  15  种方法。（该题
5 15  个空）
系统测试的策略有很多种的，有性能测试、负载测试、强度测试、易用性测试、安全测试、
配置测试、安装测试、文档测试、故障恢复测试、用户界面测试、恢复测试、分布测试、可
用性测试。
3 3 ．设计系统测试计划需要参考的项目文档有 ___ 、 ___ 和 ____ 。
设计系统测试计划需要参考的项目文档有软件测试计划、软件需求工件、和迭代计划。
4 4 ．通过画因果图来写测试用例的步骤为 ___ 、 ___ 、 ___ 、 ___ 及把因果图转换为状态图共五
个步骤。 利用因果图生成测试用例的基本步骤是：
§ 分析软件规格说明描述中，哪些是原因（即输入条件或输入条件的等价类），哪些是结
果（即输出条件），并给每个原因和结果赋予一个标识符。
§ 分析软件规格说明描述中的语义，找出原因与结果之间，原因与原因之间对应的是什么
关系? 根据这些关系，画出因果图。
§ 由于语法或环境限制，有些原因与原因之间，原因与结果之间的组合情况不可能出现。
为表明这些特殊情况，在因果图上用一些记号标明约束或限制条件。 § 把因果图转换成判
定表。
§ 把判定表的每一列拿出来作为依据，设计测试用例。
一、 测试的种类很多，比如：
代码、函数级测试
模块、组件级测试
系统测试
请说出这些测试最好由那些人员完成，测试的是什么？
代码、函数级测试一般由白盒测试人员完成，他们针对每段代码或函数进行正确性检验，检
查其是否正确的实现了规定的功能。

模块、组件级测试主要依据是程序结构设计测试模块间的集成和调用关系，一般由测试人员
完成。
系统测试在于模块测试与单元测试的基础上进行测试。了解系统功能与性能，根据测试用例
进行全面的测试。
二、 设计测试用例时应该考虑哪些方面，即不同的测试用例针对那些方面进行测试？
设计测试用例时需要注意的是，除了对整体流程及功能注意外，还要注意强度测试、性能测
试、压力测试、边界值测试、稳定性测试、安全性测试等多方面。（测试用例需要考虑的四
个基本要素是输入、输出、操作和测试环境；另外，测试用例需要考虑的是测试类型（功能、
性能、安全??），这部分可以参照 TP 做答。此外，还需要考虑用例的重要性和优先级）
四、 在 在 s windows  下保存一个文本文件时会弹出保存对话框，如果为文件名建立测试用例，
等价类应该怎样划分？
单字节，如 A；
双字节， AA、我我；
特殊字符 /‘。‘；、=-等；
保留字，如 com；
文件格式为 8.3 格式的；
文件名格式为非 8.3 格式的；
/,\,*等九个特殊字符。
假设有一个文本框要求输入 0 10  个字符的邮政编码，对于该文本框应该怎 样划分等价类？
特殊字符，如 10 个*或￥；
英文字母，如 ABCDefghik；
小于十个字符，如 123；
大于十个字符，如 11111111111；
数字和其他混合，如 123AAAAAAA；
空字符；
保留字符

5. 软件测试项目从什么时候开始，？为什么？
软件测试应该在需求分析阶段就介入,因为测试的对象不仅仅是程序编码,应该对软件开发
过程中产生的所有产品都测试,并且软件缺陷存在放大趋势.缺陷发现的越晚,修复它所花费

 

的成本就越大.

 

什么是白盒测试？什么是黑盒测试? ? 什么是回归测试? ?
答：白盒测试是测试人员要了解程序结构和处理过程,按照程序内部逻辑测试程序,检查程序中的每条通路是否按照预定要求正确工作.它主要的针对被测程序的源代码,测试着可以完全不考虑程序的功能.
白盒测试流程:详细设计-->源程序-->分析程序内部逻辑结构-->流程图-->制定测试用例-->被测程序-->执行路径-->覆盖情况分析 .
黑盒测试:（Black-box Testing，又称为功能测试或数据驱动测试）是把测试对象看作一个黑盒子。利用黑盒测试法进行动态测试时，需要测试软件产品的功能，不需测试软件产品的内部结构和处理过程。
回归测试: (regression testing): 回归测试有两类：用例回归和错误回归；用例回归是过一段时间以后再回头对以前使用过的用例在重新进行测试，看看会重新发现问题。错误回归，就是在新版本中，对以前版本中出现并修复的缺陷进行再次验证，并以缺陷为核心，

 

对相关修改的部分进行测试的方法。

 

 

2. 单元测试、集成测试、系统测试的侧重点是什么？
单元测试针对的是软件设计的最小单元--程序模块（面向过程中是函数、过程；面向对象
中是类。）,进行正确性检验的测试工作,在于发现每个程序模块内部可能存在的差错.一般
有两个步骤:人工静态检查\动态执行跟踪
集成测试针对的是通过了单元测试的各个模块所集成起来的组件进行检验,其主要内容是
各个单元模块之间的接口,以及各个模块集成后所实现的功能.
系统测试针对的是集成好的软件系统，作为整个计算机系统的一个元素,与计算机硬件\
外设\某些支持软件\数据和人员等其他系统元素结合在一起,要在实际的运行环境中,对计

 

算机系统进行一系列的集成测试和确认测试.

 

 

3. 设计用例的方法：
在测试的不同阶段运用不用的测试方法设计用例的方法依据不同:
白盒测试用例设计有如下方法：逻辑覆盖、循环覆盖和基本路径覆盖

黑盒测试用例设计方法：等价类划分、边界值分析、错误猜测、因果图、状态图、测试大纲、

 

场景法、正交策略表。

 

 

4. 一个测试工程师应具备那些素质？
1、责任心
2、沟通能力
3、团队合作精神
4、耐心、细心、信心
5、时时保持怀疑态度，并且有缺陷预防的意识

 

6、具备一定的编程经验

 

 

5. 集成测试通常都有那些策略？
基于分解的集成:大爆炸集成\自顶向下集成\自底向上集成\ 三明治集成\基于调用图的
集成\基于路径的集成\分层集成\基于功能的集成\高频集成\基于进度的集成\基于风险集
成\基于事件集成\基于使用的集成\C/S 集成
问题二：你所了解的的软件测试类型都有哪些，简单介绍一下。
按测试 策略分类：1、静态与动态测试 2、黑盒与白盒测试 3、手工和自动测试 4、冒烟测
试 5、回归测试；
按测试阶段分类：单元测试、集成测试、系统测试；
其他常见测试方法：1、功能测试 2、性能测试 3、压力测试 4、负载测试 5、易用性测试 6、
安装测试 7、界面测试 8、配置测试 9、文档测试 10、兼容性测试 11、安全性测试 12、

 

恢复测试

 

 

问题三：你认为做好测试计划工作的关键是什么？
明确测试的目标，增强测试计划的实用性

 

编写软件测试计划得重要目的就是使测试过程能够发现更多的软件缺陷，因此软件测试计划的价值取决于它对帮助管理测试项目，并且找出软件潜在的缺陷。因此，软件测试计划中的测试范围必须高度覆盖功能需求，测试方法必须切实可行，测试工具并且具有较高的实用性，便于使用，生成的测试结果直观、准确坚持“5W”规则，明确内容与过程“5W”规则指的是“What（做什么）”、“Why（为什么做）”、“When（何时做）”、“Where（在哪里）”、“How（如何做）”。利用“5W”规则创建软件测试计划，可以帮助测试团队理解测试的目的（Why），明确测试的范围和内容（What），确定测试的开始和结束日期（When），指出测试的方法和工具（How），给出测试文档和软件的存放位置（Where）。

 

采用评审和更新机制，保证测试计划满足实际需求测试计划写作完成后，如果没有经过评审，直接发送给测试团队，测试计划内容的可能不准确或遗漏测试内容，或者软件需求变更引起测试范围的增减，而测试计划的内容没有及时更新，误导测试执行人员。

分别创建测试计划与测试详细规格、测试用例应把详细的测试技术指标包含到独立创建的测试详细规格文档，把用于指导测试小组执行测试过程的测试用例放到独立创建的测试用例文档或测试用例管理数据库中。

测试计划和测试详细规格、测试用例之间是战略和战术的关系，测试计划主要从宏观上规划测试活动的范围、方法和资源配置，而测试详细规格、测试用例是完成测试任务的具体战术。

问题四：您认为做好测试用例设计工作的关键是什么？
白盒测试用例设计的关键是以较少的用例覆盖尽可能多的内部程序逻辑结果
黑盒法用例设计的关键同样也是以较少的用例覆盖模块输出和输入接口。不可能做到完全测

 

试，以最少的用例在合理的时间内发现最多的问题

 

 

问题六：您认为性能测试工作的目的是什么？做好性能测试工作的关键是什么？
性能测试的目的主要是发现在并发多用户和大数据量操作时是否会出现与需求有差异的地
方。性能测试工作的关键是做好系统分析和功能分析，确定系统瓶颈所在（这里参看 ATT
第十章 LoadRunner 的 PPT）。

问题八：你的测试职业发展目标是什么？
测试经验越多，测试能力越高。所以我的职业发展是需要时间累积的，一步步向着高级测试
工程师奔去。而且我也有初步的职业规划，前 3 年累积测试经验，不断的更新自己改正自己，

 

做好测试任务。

 

 

问题九：你对我们公司了解有多少？
建议从招聘广告上多了解信息，同时到应聘公司的网站上去尽可能多的了解这个公司的情
况，以便回答好这类问题。
问题十：测试结束的标准是什么？
从微观上来说，在测试计划中定义，比如系统在一定性能下平稳运行 72 小时，目前 Bug
Tracking System 中，本版本中没有一般严重的 BUG，普通 BUG 的数量在 3 以下，BUG 修复
率 90%以上等等参数，然后由开发经理，测试经理，项目经理共同签字认同版本 Release。
如果说宏观的，则是当这个软件彻底的消失以后，测试就结束了。
1 1 、 软件测试分为黑盒和白盒，分别适合什么情况？ ？
软件测试方法一般分为两种：白盒测试与黑盒测试。白盒测试又称为结构测试、逻辑
驱动测试或基于程序本身的测试，它着重于程序的内部结构及算法，通常不关心功能与性能
指标；黑盒测试又被称为功能测试、数据驱动测试或基于规格说明的测试，它实际上是站在
最终用户的立场，检验输入输出信息及系统性能指标是否符合规格说明书中有关功能需求及
性能需求的规定。
2、一套完整的测试应该由哪些阶段组成？
可行性分析、需求分析、概要设计、详细设计、编码、单元测试、集成测试、系统测试、验
收测试

4、测试用例通常包括那些内容？
不同结构的用例包括的不一样。（版本、编号、项目、设计人员、设计日期、输入、预期输出??）
软件测试用例的基本要素包括测试用例编号、测试标题、重要级别、测试输入、操作步骤、预期结果。
用例编号： 测试用例的编号有一定的规则，比如系统测试用例的编号这样定义规则：
PROJECT1-ST-001 ，命名规则是项目名称＋测试阶段类型（系统测试阶段）＋编号。定义测试用例编号，便于查找测试用例，便于测试用例的跟踪。
测试标题： 对测试用例的描述，测试用例标题应该清楚表达测试用例的用途。比如 “ 测试用户登录时输入错误密码时，软件的响应情况 ” 。
重要级别： 定义测试用例的优先级别，可以笼统的分为 “ 高 ” 和 “ 低 ” 两个级别。一般来说，如果软件需求的优先级为 “ 高 ” ，那么针对该需求的测试用例优先级也为“ 高 ” ；反之亦然，一般而言，是 5 级划分。
测试输入： 提供测试执行中的各种输入条件。根据需求中的输入条件，确定测试用例的输入。测试用例的输入对软件需求当中的输入有很大的依赖性，如果软件需求中没有很好的定义需求的输入，那么测试用例设计中会遇到很大的障碍。
操作步骤： 提供测试执行过程的步骤。对于复杂的测试用例，测试用例的输入需要分为几个步骤完成，这部分内容在操作步骤中详细列出。
预期结果： 提供测试执行的预期结果，预期结果应该根据软件需求中的输出得出。如果在

 

实际测试过程中，得到的实际测试结果与预期结果不符，那么测试不通过；反之则测试通过。

 

 

您是否了解以往所工作的企业的软件开发过程？如果了解，请试述一个完整的开发过程需要完成哪些工作？分别由哪些不同的角色来完成这些工作？您在以往的测试工作中都曾经具体从事过哪些工作？其中最擅长哪部分工作？
开发过程---需求调研（需求人员）、需求分析（需求人员）、概要设计（设计人员）、详
细设计(设计人员)、编码（开发人员）
测试过程---需求评审、系统测试设计、概要设计评审、集成测试设计、详细设计评审、单
元测试设计、测试执行
测试工作的整个过程都做过，擅长做测试设计
过程决定质量，软件的过程改进正是为了提高软件的质量，将过往的种种经验和教训积累起

 

来。

 

 

在您所经历的测试活动中，参与人员有哪些？您所担任的角色是什么？
有项目管理员、开发管理员、系统分析员、设计员、开发员、质量管理员、测试管理员、测
试设计员、测试员
担任过测试管理员、测试设计员、测试员
测试用例设计的原则是什么？目前主要的测试用例设计方法有哪些？
代表性：能够代表并覆盖各种合理的和不合理、合法的和非法的、边界的和越界的、以及极
限的输入数据、操作和环境设置等.
可判定性：即测试执行结果的正确性是可判定的，每一个测试用例都应有相应的期望结果.
可再现性：即对同样的测试用例，系统的执行结果应当是相同的。
方法有等价类、边界值、因果图、状态图、正交法、大纲法
面向对象的测试用例设计有几种方法？如何实现？
给类中的每个构造函数设计一组测试用例
组合类中的类变量、实例变量
组合类中的各种方法
根据前置条件和后置条件设计测试用例
根据代码设计测试用例
LoadRunner 分为哪三个模块？请简述各模块的主要功能。
Virtual User Generator：用于录制脚步
Mercury LoadRunner Controller：用于创建、运行和监控场景

 

Mercury LoadRunner Analysis：用于分析测试结果

 

 

你对测试最大的兴趣在哪里？为什么？
最大的兴趣就是测试有难度，有挑战性！做测试越久越能感觉到做好测试有多难。曾经在无
忧测试网上看到一篇文章，是关于如何做好一名测试工程师。一共罗列了 11，12 点，有部
分是和人的性格有关，有部分需要后天的努力。但除了性格有关的 1，2 点我没有把握，其
他点我都很有信心做好它。
刚开始进入测试行业时，对测试的认识是从无忧测试网上了解到的一些资料，当时是冲着做
测试需要很多技能才能做的好，虽然入门容易，但做好很难，比开发更难，虽然当时我很想
做开发（学校专业课我基本上不缺席，因为我喜欢我的专业），但看到测试比开发更难更有
挑战性，想做好测试的意志就更坚定了。
我觉得做测试整个过程中有 2 点让我觉得很有难度（对我来说，有难度的东西我就非常感兴
趣），第一是测试用例的设计，因为测试的精华就在测试用例的设计上了，要在版本出来之
前，把用例写好，用什么测试方法写？（也就是测试计划或测试策略），如果你刚测试一个
新任务时，你得花一定的时间去消化业务需求和技术基础，业务需求很好理解（多和产品经
理和开发人员沟通就能达到目的），而技术基础可就没那么简单了，这需要你自觉的学习能
力，比如说网站吧，最基本的技术知识你要知道网站内部是怎么运作的的，后台是怎么响应
用户请求的？测试环境如何搭建？这些都需要最早的学好。至少在开始测试之前能做好基本
的准备，可能会遇到什么难题？需求细节是不是没有确定好？这些问题都能在设计用例的时
候发现。
第二是发现 BUG 的时候了，这应该是测试人员最基本的任务了，一般按测试用例开始测试就
能发现大部分的 bug，还有一部分 bug 需要测试的过程中更了解所测版本的情况获得更多信
息，补充测试用例，测试出 bug。还有如何发现 bug？这就需要在测试用例有效的情况下，
通过细心和耐心去发现 bug 了，每个用例都有可能发现 bug，每个地方都有可能出错，所以
测试过程中思维要清晰（测试过程数据流及结果都得看仔细了，bug 都在里面发现的）。如
何描述 bug 也很有讲究，bug 在什么情况下会产生，如果条件变化一点点，就不会有这个 bug，

 

以哪些最少的操作步骤就能重现这个bug，这个bug产生的规律是什么？如果你够厉害的话，

 

可以帮开发人员初步定位问题。

 

问题十五：你的测试职业发展目标是什么？
测试经验越多，测试能力越高。所以我的职业发展是需要时间累积的，一步步向着高级测试
工程师奔去。而且我也有初步的职业规划，前 3 年累积测试经验，按如何做好测试工程师的

 

11，12 点要求自己，不断的更新自己改正自己，做好测试任务。

 

 

二、您所熟悉的软件测试类型都有哪些？请试着分别比较这些不同的测试类型的区别与联
系（如功能测试、性能测试??）
测试类型有：功能测试，性能测试，界面测试。
功能测试在测试工作中占的比例最大，功能测试也叫黑盒测试。是把测试对象看作一个
黑盒子。利用黑盒测试法进行动态测试时，需要测试软件产品的功能，不需测试软件产品的
内部结构和处理过程。采用黑盒技术设计测试用例的方法有：等价类划分、边界值分析、错
误推测、因果图和综合策略。
性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各
项性能指标进行测试。负载测试和压力测试都属于性能测试，两者可以结合进行。通过负载
测试，确定在各种工作负载下系统的性能，目标是测试当负载逐渐增加时，系统各项性能指
标的变化情况。压力测试是通过确定一个系统的瓶颈或者不能接收的性能点，来获得系统能
提供的最大服务级别的测试。
界面测试，界面是软件与用户交互的最直接的层，界面的好坏决定用户对软件的第一印
象。而且设计良好的界面能够引导用户自己完成相应的操作，起到向导的作用。同时界面如
同人的面孔，具有吸引用户的直接优势。设计合理的界面能给用户带来轻松愉悦的感受和成
功的感觉，相反由于界面设计的失败，让用户有挫败感，再实用强大的功能都可能在用户的
畏惧与放弃中付诸东流。
区别在于，功能测试关注产品的所有功能上，要考虑到每个细节功能，每个可能存在的
功能问题。性能测试主要关注于产品整体的多用户并发下的稳定性和健壮性。界面测试更关
注于用户体验上，用户使用该产品的时候是否易用，是否易懂，是否规范（快捷键之类的），
是否美观（能否吸引用户的注意力），是否安全（尽量在前台避免用户无意输入无效的数据，
当然考虑到体验性，不能太粗鲁的弹出警告）？做某个性能测试的时候，首先它可能是个功

 

能点，首先要保证它的功能是没问题的，然后再考虑该功能点的性能测试

 

 

三、请试着比较一下黑盒测试、白盒测试、单元测试、集成测试、系统测试、验收 测试的
区别与联系。
黑盒测试：已知产品的功能设计规格，可以进行测试证明每个实现了的功能是否符合要
求。
白盒测试：已知产品的内部工作过程，可以通过测试证明每种内部操作是否符合设计规
格要求，所有内部成分是否以经过检查。
软件的黑盒测试意味着测试要在软件的接口处进行。这种方法是把测试对象看做一个黑
盒子，测试人员完全不考虑程序内部的逻辑结构和内部特性，只依据程序的需求规格说明书，
检查程序的功能是否符合它的功能说明。因此黑盒测试又叫功能测试或数据驱动测试。黑盒
测试主要是为了发现以下几类错误：
1、是否有不正确或遗漏的功能？
2、在接口上，输入是否能正确的接受？能否输出正确的结果？
3、是否有数据结构错误或外部信息（例如数据文件）访问错误？
4、性能上是否能够满足要求？
5、是否有初始化或终止性错误？
软件的白盒测试是对软件的过程性细节做细致的检查。这种方法是把测试对象看做一个
打开的盒子，它允许测试人员利用程序内部的逻辑结构及有关信息，设计或选择测试用例，
对程序所有逻辑路径进行测试。通过在不同点检查程序状态，确定实际状态是否与预期的状
态一致。因此白盒测试又称为结构测试或逻辑驱动测试。白盒测试主要是想对程序模块进行
如下检查：
1、对程序模块的所有独立的执行路径至少测试一遍。
2、对所有的逻辑判定，取“真”与取“假”的两种情况都能至少测一遍。
3、在循环的边界和运行的界限内执行循环体。
4、测试内部数据结构的有效性，等等。
单元测试（模块测试）是开发者编写的一小段代码，用于检验被测代码的一个很小的、
很明确的功能是否正确。通常而言，一个单元测试是用于判断某个特定条件（或者场景）下
某个特定函数的行为。
单元测试是由程序员自己来完成，最终受益的也是程序员自己。可以这么说，程序员有
责任编写功能代码，同时也就有责任为自己的代码编写单元测试。执行单元测试，就是为了
证明这段代码的行为和我们期望的一致。
集成测试（也叫组装测试，联合测试）是单元测试的逻辑扩展。它的最简单的形式是：
两个已经测试过的单元组合成一个组件，并且测试它们之间的接口。从这一层意义上讲，组
件是指多个单元的集成聚合。在现实方案中，许多单元组合成组件，而这些组件又聚合成程
序的更大部分。方法是测试片段的组合，并最终扩展进程，将您的模块与其他组的模块一起
测试。最后，将构成进程的所有模块一起测试。
系统测试是将经过测试的子系统装配成一个完整系统来测试。它是检验系统是否确实能
提供系统方案说明书中指定功能的有效方法。（常见的联调测试）
系统测试的目的是对最终软件系统进行全面的测试，确保最终软件系统满足产品需求并
且遵循系统设计。
验收测试是部署软件之前的最后一个测试操作。验收测试的目的是确保软件准备就绪，
并且可以让最终用户将其用于执行软件的既定功能和任务。
验收测试是向未来的用户表明系统能够像预定要求那样工作。经集成测试后，已经按照设计
把所有的模块组装成一个完整的软件系统，接口错误也已经基本排除了，接着就应该进一步
验证软件的有效性，这就是验收测试的任务，即软件的功能和性能如同用户所合理期待的那

 

样。

 

 

四、当开发人员说不是 G BUG  时，你如何应付？
开发人员说不是 bug，有 2 种情况，一是需求没有确定，所以我可以这么做，这个时候
可以找来产品经理进行确认，需不需要改动，3 方商量确定好后再看要不要改。二是这种情
况不可能发生，所以不需要修改，这个时候，我可以先尽可能的说出是 BUG 的依据是什么？
如果被用户发现或出了问题，会有什么不良结果？程序员可能会给你很多理由，你可以对他
的解释进行反驳。如果还是不行，那我可以给这个问题提出来,跟开发经理和测试经理进行
确认,如果要修改就改,如果不要修改就不改。其实有些真的不是 bug，我也只是建议的方式
写进 TD 中，如果开发人员不修改也没有大问题。如果确定是 bug 的话，一定要坚持自己的

 

立场，让问题得到最后的确认。

 

 

五、为什么要在一个团队中开展软件测试工作？
因为没有经过测试的软件很难在发布之前知道该软件的质量，就好比 ISO 质量认证一样，测
试同样也需要质量的保证，这个时候就需要在团队中开展软件测试的工作。在测试的过程发
现软件中存在的问题，及时让开发人员得知并修改问题，在即将发布时，从测试报告中得出
软件的质量情况。
六、如果有机会转成开发人员，你会去做开发工作吗？
如果公司确实需要我可以从事开发，但我还是喜欢做测试，我认为我更适合做测试。

八 、一份测试计划应该包括哪些内容？
背景、项目简介、目的、测试范围、测试策略、人员分工、资源要求、进度计划、参考文档、

 

常用术语、提交文档、风险分析。

 

 

九、针对于软件的行业背景，你如何理解软件的业务？
阅读用户手册了解软件的功能和操作流程；
看一些业务的专业书籍补充业务知识；
如果有用户实际的数据，可以拿实际的数据进行参考；
参考以前的用例和 BUG 报告；
在使用软件的过程中多思考；

 

多与产品经理交流。

 

 

十、测试用例应包括哪些内容？
编号、模块名称、编写人、日期、操作说明、输入数据、预期结果等。
如何定位测试用例 的作用？
组织性：编写、组织性、功能覆盖、重复性、跟踪、测试确认
测试过程中什么是最重要的？
需求、计划。
什么是兼容性测试？请举例说明如何利用兼容性测试列表进行测试。
主要验证软件产品在不同版本之间的兼容性。包括向下兼容和交错兼容，向下兼容是测试软
件新版本保留它早期版本功能的情况，交错兼容是验证共同存在的两个相关但不相同的产品
之间的兼容性。
对某软件进行测试，发现在 8 WIN98  上运行得很慢，怎么判别是该软件存在问题还是其软硬
件运行环境存在问题？
看软件的运行环境要求。如果符合要求则是程序存在问题，若不符合要求则是硬件系统存在
问题